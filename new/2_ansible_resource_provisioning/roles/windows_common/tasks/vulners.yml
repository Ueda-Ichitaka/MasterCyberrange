---



# The latest powershell gives us more flexiablity to use Windows DSC items
- name: Windows | Install Powershell 5.0
  chocolatey.chocolatey.win_chocolatey:
    name: "powershell"
  register: check_powershell5
  retries: 3
  delay: 10

# Powershell 5.0 requires a reboot, so lets get it done if it's needed.
- name: Windows | Reboot to complete Powershell 5.0 install
  win_reboot:
    # We will give windows a full hour to reboot.
    reboot_timeout: 3600
    post_reboot_delay: 60
  when: check_powershell5.changed


# make all windows installs vulnerable for juicypotato

# uninstall updates
- name: uninstall updates against Juicy Potato (CVE-2019-0836) 
  ansible.windows.win_powershell:
    script: |
      wusa /uninstall /kb:4489886
      wusa /uninstall /kb:4493509
      wusa /uninstall /kb:4497934


- name: disable defender 
  ansible.windows.win_powershell:
    script: |
      Set-MpPreference -DisableRealtimeMonitoring $true -DisableScriptScanning $true -DisableBehaviorMonitoring $true -DisableIOAVProtection $true -DisableIntrusionPreventionSystem $true


- name: open required ports for juicypotato 
  ansible.windows.win_powershell:
    script: |
      netsh advfirewall firewall add rule name="Potato" protocol=TCP dir=in localport=135 action=allow
      netsh advfirewall firewall add rule name="Potato" protocol=TCP dir=out localport=135 action=allow

# Configure Services to Run Under Local Service or Network Service Accounts



# use https://blakedrumm.com/blog/set-and-check-user-rights-assignment/ to set privileges
# grant user SeImpersonatePrivilege
# grant user SeAssignPrimaryTokenPrivilege
- name: Copy application to 
  ansible.windows.win_copy:
    src: Set-UserRights.ps1
    dest: C:\Set-UserRights.ps1


- name: open required ports for juicypotato 
  ansible.windows.win_powershell:
    script: |    
      cd C:\
        $localAccounts = GET-LocalUser | Where-Object Enabled -EQ "True" | Select-Object Name
        $exlcude = @("cloudbase-init", "vagrant", "sshd")
        foreach ($account in $localAccounts)
        {                
          .\Set-UserRights.ps1 -AddRight -Username $account.Name -UserRight SeAssignPrimaryTokenPrivilege
          .\Set-UserRights.ps1 -AddRight -Username $account.Name -UserRight SeImpersonatePrivilege                                                  
        }
     




# Configure Services to Run Under Local Service or Network Service Accounts

#     Juicy Potato typically exploits services that run under specific user accounts like LOCAL SERVICE or NETWORK SERVICE. These services must be properly configured:
#         Ensure that the COM and DCOM services are running and are configured to allow impersonation under LOCAL SERVICE or NETWORK SERVICE.
#         Check the configuration of the service you intend to exploit to confirm it uses these accounts.


